import matplotlib.pyplot as plt
import builtins  # Import the builtins module to access the original sum function

def my_sum(a, b, c):
    return a + b + c

def printBoard(xState, zState):
    def display(i):
        if xState[i]:
            return '\033[91mX\033[0m'  # Red X
        elif zState[i]:
            return '\033[96mO\033[0m'  # Light Blue O
        else:
            return str(i)

    print(f"{display(0)} | {display(1)} | {display(2)} ")
    print("--|---|---")
    print(f"{display(3)} | {display(4)} | {display(5)} ")
    print("--|---|---")
    print(f"{display(6)} | {display(7)} | {display(8)} ")

def checkWin(xState, zState):
    wins = [[0, 1, 2], [3, 4, 5], [6, 7, 8],
            [0, 3, 6], [1, 4, 7], [2, 5, 8],
            [0, 4, 8], [2, 4, 6]]
    for win in wins:
        if my_sum(xState[win[0]], xState[win[1]], xState[win[2]]) == 3:
            print("\033[91mX Won the match\033[0m")
            return 1
        if my_sum(zState[win[0]], zState[win[1]], zState[win[2]]) == 3:
            print("\033[96mO Won the match\033[0m")
            return 0
    return -1

# Corrected the if condition to use __name__
if __name__ == "__main__":  
    print("\033[91mWelcome to TIC TAC TOE Game\033[0m")
    player1 = input("Enter Player 1 name (X): ")
    player2 = input("Enter Player 2 name (O): ")

    player1_wins = 0
    player2_wins = 0
    draws = 0

    for match in range(2):  # Play two matches
        xState = [0] * 9
        zState = [0] * 9
        turn = 1
        print(f"\n\033[93mStarting Match {match + 1}\033[0m\n")

        while True:
            printBoard(xState, zState)
            if turn == 1:
                print(f"{player1}'s (X) Chance")
                value = int(input("Please enter a value (0-8): "))
                
                # Validate user input
                if value < 0 or value > 8:
                    print("Invalid input. Please enter a number between 0 and 8.")
                    continue

                if xState[value] or zState[value]:
                    print("Cell already taken, try again.")
                    continue
                xState[value] = 1
            else:
                print(f"{player2}'s (O) Chance")
                value = int(input("Please enter a value (0-8): "))

                # Validate user input
                if value < 0 or value > 8:
                    print("Invalid input. Please enter a number between 0 and 8.")
                    continue

                if xState[value] or zState[value]:
                    print("Cell already taken, try again.")
                    continue
                zState[value] = 1

            cwin = checkWin(xState, zState)
            if cwin != -1:
                printBoard(xState, zState)
                print("\033[95mMatch over\033[0m")
                if cwin == 1:
                    player1_wins += 1
                else:
                    player2_wins += 1
                break

            # Check for a draw
            if builtins.sum(xState) + builtins.sum(zState) == 9:  
                printBoard(xState, zState)
                print("\033[95mIt's a draw! Match over\033[0m")
                draws += 1
                break

            turn = 1 - turn  # Switch turns

    # Final Analysis
    print("\n\033[94mFinal Match Analysis:\033[0m")
    print(f"{player1} (X) won: {player1_wins}")
    print(f"{player2} (O) won: {player2_wins}")
    print(f"Draws: {draws}")

    if player1_wins > player2_wins:
        print(f"\033[92m{player1} won the most matches!\033[0m")
    elif player2_wins > player1_wins:
        print(f"\033[92m{player2} won the most matches!\033[0m")
    else:
        print("\033[93mIt's a tie overall!\033[0m")

    # Bar Graph Visualization
    labels = [player1, player2, "Draws"]
    values = [player1_wins, player2_wins, draws]
    colors = ['red', 'lightblue', 'purple']

    plt.figure(figsize=(8, 5))
    plt.bar(labels, values, color=colors)
    plt.title("Tic Tac Toe Match Summary")
    plt.xlabel("Result")
    plt.ylabel("Number of Matches")
    plt.grid(axis='y', linestyle='--', alpha=0.7)
    plt.tight_layout()
    plt.show()